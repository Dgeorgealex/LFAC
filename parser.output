Grammar

    0 $accept: program $end

    1 program: global_variables '#' functions '#' structs '#' MAIN '(' ')' '{' body '}'

    2 global_variables: global_variable global_variables
    3                 | ε

    4 global_variable: datatype ID '=' value ';'
    5                | datatype ID ';'
    6                | CONST datatype ID '=' value ';'

    7 $@1: ε

    8 global_variable: datatype ID '[' NUMBER ']' $@1 init_vector ';'

    9 $@2: ε

   10 global_variable: CONST datatype ID '[' NUMBER ']' $@2 init_vector ';'

   11 init_vector: '=' '{' values_for_vector '}'
   12            | ε

   13 values_for_vector: value_for_vector ',' values_for_vector
   14                  | value_for_vector

   15 value_for_vector: NUMBER
   16                 | FLOAT_NUM
   17                 | CHARACTER
   18                 | STR

   19 $@3: ε

   20 functions: function $@3 functions
   21          | ε

   22 $@4: ε

   23 function: datatype ID $@4 '(' parameters ')' '{' body return '}'

   24 parameters: param ',' parameters
   25           | param
   26           | ε

   27 param: datatype ID

   28 structs: STRUCT structul structs
   29        | ε

   30 $@5: ε

   31 $@6: ε

   32 structul: ID '{' $@5 struct_variables '#' $@6 struct_functions '}' ';'

   33 struct_variables: struct_variable struct_variables
   34                 | struct_variable

   35 struct_variable: datatype ID ';'

   36 $@7: ε

   37 struct_functions: struct_function $@7 struct_functions
   38                 | ε

   39 $@8: ε

   40 struct_function: datatype ID $@8 '(' parameters ')' '{' body return '}'

   41 datatype: INT
   42         | FLOAT
   43         | CHAR
   44         | STRING
   45         | BOOL

   46 body: bodypart body
   47     | bodypart

   48 bodypart: FOR '(' statement ';' boolean_expression ';' statement ')' '{' body '}'
   49         | WHILE '(' boolean_expression ')' '{' body '}'
   50         | IF '(' boolean_expression ')' '{' body '}' else
   51         | statement ';'

   52 else: ELSE '{' body '}'
   53     | ε

   54 statement: datatype ID init
   55          | CONST datatype ID init
   56          | assignable_element init

   57 $@9: ε

   58 statement: STRUCT ID ID $@9 init_struct
   59          | EVAL '(' expression ')'
   60          | TYPEOF '(' expression ')'

   61 $@10: ε

   62 statement: datatype ID '[' NUMBER ']' $@10 init_vector

   63 $@11: ε

   64 statement: CONST datatype ID '[' NUMBER ']' $@11 init_vector
   65          | function_call
   66          | function_call_struct

   67 init: '=' expression
   68     | '=' boolean_expression
   69     | ε

   70 init_struct: '=' '{' values '}'
   71            | ε

   72 $@12: ε

   73 values: value $@12 ',' values
   74       | value

   75 expression: expression ADD termen
   76           | expression SUBTRACT termen
   77           | termen

   78 termen: termen MULTIPLY factor
   79       | termen DIVIDE factor
   80       | factor

   81 factor: '(' expression ')'
   82       | element

   83 element: value
   84        | assignable_element
   85        | function_call
   86        | function_call_struct

   87 $@13: ε

   88 function_call_struct: ID '.' ID '(' $@13 parameter_values ')'

   89 assignable_element: ID
   90                   | ID '.' ID
   91                   | ID '[' NUMBER ']'

   92 $@14: ε

   93 function_call: ID $@14 '(' parameter_values ')'

   94 $@15: ε

   95 parameter_values: expression $@15 ',' parameter_values
   96                 | expression
   97                 | ε

   98 boolean_expression: condition boolean boolean_expression
   99                   | condition

  100 condition: expression relop expression
  101          | '(' expression relop expression ')'

  102 boolean: AND
  103        | OR

  104 relop: LT
  105      | GT
  106      | LE
  107      | GE
  108      | EQ
  109      | NE

  110 value: NUMBER
  111      | FLOAT_NUM
  112      | CHARACTER
  113      | STR
  114      | FALSE
  115      | TRUE

  116 return: RETURN value ';'
  117       | ε


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 1 32
    '(' (40) 1 23 40 48 49 50 59 60 81 88 93 101
    ')' (41) 1 23 40 48 49 50 59 60 81 88 93 101
    ',' (44) 13 24 73 95
    '.' (46) 88 90
    ';' (59) 4 5 6 8 10 32 35 48 51 116
    '=' (61) 4 6 11 67 68 70
    '[' (91) 8 10 62 64 91
    ']' (93) 8 10 62 64 91
    '{' (123) 1 11 23 32 40 48 49 50 52 70
    '}' (125) 1 11 23 32 40 48 49 50 52 70
    error (256)
    INT (258) 41
    FLOAT (259) 42
    CHAR (260) 43
    STRING (261) 44
    BOOL (262) 45
    CONST (263) 6 10 55 64
    FOR (264) 48
    IF (265) 50
    ELSE (266) 52
    STRUCT (267) 28 58
    RETURN (268) 116
    MAIN (269) 1
    WHILE (270) 49
    EVAL (271) 59
    TYPEOF (272) 60
    NUMBER <tok> (273) 8 10 15 62 64 91 110
    ID <tok> (274) 4 5 6 8 10 23 27 32 35 40 54 55 58 62 64 88 89 90 91 93
    TRUE <tok> (275) 115
    FALSE <tok> (276) 114
    LE <tok> (277) 106
    GE <tok> (278) 107
    EQ <tok> (279) 108
    NE <tok> (280) 109
    GT <tok> (281) 105
    LT <tok> (282) 104
    AND <tok> (283) 102
    OR <tok> (284) 103
    ADD <tok> (285) 75
    MULTIPLY <tok> (286) 78
    DIVIDE <tok> (287) 79
    SUBTRACT <tok> (288) 76
    FLOAT_NUM <tok> (289) 16 111
    CHARACTER <tok> (290) 17 112
    STR <tok> (291) 18 113


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    global_variables (50)
        on left: 2 3
        on right: 1 2
    global_variable (51)
        on left: 4 5 6 8 10
        on right: 2
    $@1 (52)
        on left: 7
        on right: 8
    $@2 (53)
        on left: 9
        on right: 10
    init_vector (54)
        on left: 11 12
        on right: 8 10 62 64
    values_for_vector (55)
        on left: 13 14
        on right: 11 13
    value_for_vector (56)
        on left: 15 16 17 18
        on right: 13 14
    functions (57)
        on left: 20 21
        on right: 1 20
    $@3 (58)
        on left: 19
        on right: 20
    function (59)
        on left: 23
        on right: 20
    $@4 (60)
        on left: 22
        on right: 23
    parameters (61)
        on left: 24 25 26
        on right: 23 24 40
    param (62)
        on left: 27
        on right: 24 25
    structs (63)
        on left: 28 29
        on right: 1 28
    structul (64)
        on left: 32
        on right: 28
    $@5 (65)
        on left: 30
        on right: 32
    $@6 (66)
        on left: 31
        on right: 32
    struct_variables (67)
        on left: 33 34
        on right: 32 33
    struct_variable (68)
        on left: 35
        on right: 33 34
    struct_functions (69)
        on left: 37 38
        on right: 32 37
    $@7 (70)
        on left: 36
        on right: 37
    struct_function (71)
        on left: 40
        on right: 37
    $@8 (72)
        on left: 39
        on right: 40
    datatype <tok> (73)
        on left: 41 42 43 44 45
        on right: 4 5 6 8 10 23 27 35 40 54 55 62 64
    body (74)
        on left: 46 47
        on right: 1 23 40 46 48 49 50 52
    bodypart (75)
        on left: 48 49 50 51
        on right: 46 47
    else (76)
        on left: 52 53
        on right: 50
    statement (77)
        on left: 54 55 56 58 59 60 62 64 65 66
        on right: 48 51
    $@9 (78)
        on left: 57
        on right: 58
    $@10 (79)
        on left: 61
        on right: 62
    $@11 (80)
        on left: 63
        on right: 64
    init <tok> (81)
        on left: 67 68 69
        on right: 54 55 56
    init_struct (82)
        on left: 70 71
        on right: 58
    values (83)
        on left: 73 74
        on right: 70 73
    $@12 (84)
        on left: 72
        on right: 73
    expression <tok> (85)
        on left: 75 76 77
        on right: 59 60 67 75 76 81 95 96 100 101
    termen <tok> (86)
        on left: 78 79 80
        on right: 75 76 77 78 79
    factor <tok> (87)
        on left: 81 82
        on right: 78 79 80
    element <tok> (88)
        on left: 83 84 85 86
        on right: 82
    function_call_struct <tok> (89)
        on left: 88
        on right: 66 86
    $@13 (90)
        on left: 87
        on right: 88
    assignable_element <tok> (91)
        on left: 89 90 91
        on right: 56 84
    function_call <tok> (92)
        on left: 93
        on right: 65 85
    $@14 (93)
        on left: 92
        on right: 93
    parameter_values (94)
        on left: 95 96 97
        on right: 88 93 95
    $@15 (95)
        on left: 94
        on right: 95
    boolean_expression (96)
        on left: 98 99
        on right: 48 49 50 68 98
    condition (97)
        on left: 100 101
        on right: 98 99
    boolean (98)
        on left: 102 103
        on right: 98
    relop (99)
        on left: 104 105 106 107 108 109
        on right: 100 101
    value <tok> (100)
        on left: 110 111 112 113 114 115
        on right: 4 6 73 74 83 116
    return (101)
        on left: 116 117
        on right: 23 40


State 0

    0 $accept: • program $end

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 6

    $default  reduce using rule 3 (global_variables)

    program           go to state 7
    global_variables  go to state 8
    global_variable   go to state 9
    datatype          go to state 10


State 1

   41 datatype: INT •

    $default  reduce using rule 41 (datatype)


State 2

   42 datatype: FLOAT •

    $default  reduce using rule 42 (datatype)


State 3

   43 datatype: CHAR •

    $default  reduce using rule 43 (datatype)


State 4

   44 datatype: STRING •

    $default  reduce using rule 44 (datatype)


State 5

   45 datatype: BOOL •

    $default  reduce using rule 45 (datatype)


State 6

    6 global_variable: CONST • datatype ID '=' value ';'
   10                | CONST • datatype ID '[' NUMBER ']' $@2 init_vector ';'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    datatype  go to state 11


State 7

    0 $accept: program • $end

    $end  shift, and go to state 12


State 8

    1 program: global_variables • '#' functions '#' structs '#' MAIN '(' ')' '{' body '}'

    '#'  shift, and go to state 13


State 9

    2 global_variables: global_variable • global_variables

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 6

    $default  reduce using rule 3 (global_variables)

    global_variables  go to state 14
    global_variable   go to state 9
    datatype          go to state 10


State 10

    4 global_variable: datatype • ID '=' value ';'
    5                | datatype • ID ';'
    8                | datatype • ID '[' NUMBER ']' $@1 init_vector ';'

    ID  shift, and go to state 15


State 11

    6 global_variable: CONST datatype • ID '=' value ';'
   10                | CONST datatype • ID '[' NUMBER ']' $@2 init_vector ';'

    ID  shift, and go to state 16


State 12

    0 $accept: program $end •

    $default  accept


State 13

    1 program: global_variables '#' • functions '#' structs '#' MAIN '(' ')' '{' body '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 21 (functions)

    functions  go to state 17
    function   go to state 18
    datatype   go to state 19


State 14

    2 global_variables: global_variable global_variables •

    $default  reduce using rule 2 (global_variables)


State 15

    4 global_variable: datatype ID • '=' value ';'
    5                | datatype ID • ';'
    8                | datatype ID • '[' NUMBER ']' $@1 init_vector ';'

    '='  shift, and go to state 20
    ';'  shift, and go to state 21
    '['  shift, and go to state 22


State 16

    6 global_variable: CONST datatype ID • '=' value ';'
   10                | CONST datatype ID • '[' NUMBER ']' $@2 init_vector ';'

    '='  shift, and go to state 23
    '['  shift, and go to state 24


State 17

    1 program: global_variables '#' functions • '#' structs '#' MAIN '(' ')' '{' body '}'

    '#'  shift, and go to state 25


State 18

   20 functions: function • $@3 functions

    $default  reduce using rule 19 ($@3)

    $@3  go to state 26


State 19

   23 function: datatype • ID $@4 '(' parameters ')' '{' body return '}'

    ID  shift, and go to state 27


State 20

    4 global_variable: datatype ID '=' • value ';'

    NUMBER     shift, and go to state 28
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33

    value  go to state 34


State 21

    5 global_variable: datatype ID ';' •

    $default  reduce using rule 5 (global_variable)


State 22

    8 global_variable: datatype ID '[' • NUMBER ']' $@1 init_vector ';'

    NUMBER  shift, and go to state 35


State 23

    6 global_variable: CONST datatype ID '=' • value ';'

    NUMBER     shift, and go to state 28
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33

    value  go to state 36


State 24

   10 global_variable: CONST datatype ID '[' • NUMBER ']' $@2 init_vector ';'

    NUMBER  shift, and go to state 37


State 25

    1 program: global_variables '#' functions '#' • structs '#' MAIN '(' ')' '{' body '}'

    STRUCT  shift, and go to state 38

    $default  reduce using rule 29 (structs)

    structs  go to state 39


State 26

   20 functions: function $@3 • functions

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 21 (functions)

    functions  go to state 40
    function   go to state 18
    datatype   go to state 19


State 27

   23 function: datatype ID • $@4 '(' parameters ')' '{' body return '}'

    $default  reduce using rule 22 ($@4)

    $@4  go to state 41


State 28

  110 value: NUMBER •

    $default  reduce using rule 110 (value)


State 29

  115 value: TRUE •

    $default  reduce using rule 115 (value)


State 30

  114 value: FALSE •

    $default  reduce using rule 114 (value)


State 31

  111 value: FLOAT_NUM •

    $default  reduce using rule 111 (value)


State 32

  112 value: CHARACTER •

    $default  reduce using rule 112 (value)


State 33

  113 value: STR •

    $default  reduce using rule 113 (value)


State 34

    4 global_variable: datatype ID '=' value • ';'

    ';'  shift, and go to state 42


State 35

    8 global_variable: datatype ID '[' NUMBER • ']' $@1 init_vector ';'

    ']'  shift, and go to state 43


State 36

    6 global_variable: CONST datatype ID '=' value • ';'

    ';'  shift, and go to state 44


State 37

   10 global_variable: CONST datatype ID '[' NUMBER • ']' $@2 init_vector ';'

    ']'  shift, and go to state 45


State 38

   28 structs: STRUCT • structul structs

    ID  shift, and go to state 46

    structul  go to state 47


State 39

    1 program: global_variables '#' functions '#' structs • '#' MAIN '(' ')' '{' body '}'

    '#'  shift, and go to state 48


State 40

   20 functions: function $@3 functions •

    $default  reduce using rule 20 (functions)


State 41

   23 function: datatype ID $@4 • '(' parameters ')' '{' body return '}'

    '('  shift, and go to state 49


State 42

    4 global_variable: datatype ID '=' value ';' •

    $default  reduce using rule 4 (global_variable)


State 43

    8 global_variable: datatype ID '[' NUMBER ']' • $@1 init_vector ';'

    $default  reduce using rule 7 ($@1)

    $@1  go to state 50


State 44

    6 global_variable: CONST datatype ID '=' value ';' •

    $default  reduce using rule 6 (global_variable)


State 45

   10 global_variable: CONST datatype ID '[' NUMBER ']' • $@2 init_vector ';'

    $default  reduce using rule 9 ($@2)

    $@2  go to state 51


State 46

   32 structul: ID • '{' $@5 struct_variables '#' $@6 struct_functions '}' ';'

    '{'  shift, and go to state 52


State 47

   28 structs: STRUCT structul • structs

    STRUCT  shift, and go to state 38

    $default  reduce using rule 29 (structs)

    structs  go to state 53


State 48

    1 program: global_variables '#' functions '#' structs '#' • MAIN '(' ')' '{' body '}'

    MAIN  shift, and go to state 54


State 49

   23 function: datatype ID $@4 '(' • parameters ')' '{' body return '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 26 (parameters)

    parameters  go to state 55
    param       go to state 56
    datatype    go to state 57


State 50

    8 global_variable: datatype ID '[' NUMBER ']' $@1 • init_vector ';'

    '='  shift, and go to state 58

    $default  reduce using rule 12 (init_vector)

    init_vector  go to state 59


State 51

   10 global_variable: CONST datatype ID '[' NUMBER ']' $@2 • init_vector ';'

    '='  shift, and go to state 58

    $default  reduce using rule 12 (init_vector)

    init_vector  go to state 60


State 52

   32 structul: ID '{' • $@5 struct_variables '#' $@6 struct_functions '}' ';'

    $default  reduce using rule 30 ($@5)

    $@5  go to state 61


State 53

   28 structs: STRUCT structul structs •

    $default  reduce using rule 28 (structs)


State 54

    1 program: global_variables '#' functions '#' structs '#' MAIN • '(' ')' '{' body '}'

    '('  shift, and go to state 62


State 55

   23 function: datatype ID $@4 '(' parameters • ')' '{' body return '}'

    ')'  shift, and go to state 63


State 56

   24 parameters: param • ',' parameters
   25           | param •

    ','  shift, and go to state 64

    $default  reduce using rule 25 (parameters)


State 57

   27 param: datatype • ID

    ID  shift, and go to state 65


State 58

   11 init_vector: '=' • '{' values_for_vector '}'

    '{'  shift, and go to state 66


State 59

    8 global_variable: datatype ID '[' NUMBER ']' $@1 init_vector • ';'

    ';'  shift, and go to state 67


State 60

   10 global_variable: CONST datatype ID '[' NUMBER ']' $@2 init_vector • ';'

    ';'  shift, and go to state 68


State 61

   32 structul: ID '{' $@5 • struct_variables '#' $@6 struct_functions '}' ';'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    struct_variables  go to state 69
    struct_variable   go to state 70
    datatype          go to state 71


State 62

    1 program: global_variables '#' functions '#' structs '#' MAIN '(' • ')' '{' body '}'

    ')'  shift, and go to state 72


State 63

   23 function: datatype ID $@4 '(' parameters ')' • '{' body return '}'

    '{'  shift, and go to state 73


State 64

   24 parameters: param ',' • parameters

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 26 (parameters)

    parameters  go to state 74
    param       go to state 56
    datatype    go to state 57


State 65

   27 param: datatype ID •

    $default  reduce using rule 27 (param)


State 66

   11 init_vector: '=' '{' • values_for_vector '}'

    NUMBER     shift, and go to state 75
    FLOAT_NUM  shift, and go to state 76
    CHARACTER  shift, and go to state 77
    STR        shift, and go to state 78

    values_for_vector  go to state 79
    value_for_vector   go to state 80


State 67

    8 global_variable: datatype ID '[' NUMBER ']' $@1 init_vector ';' •

    $default  reduce using rule 8 (global_variable)


State 68

   10 global_variable: CONST datatype ID '[' NUMBER ']' $@2 init_vector ';' •

    $default  reduce using rule 10 (global_variable)


State 69

   32 structul: ID '{' $@5 struct_variables • '#' $@6 struct_functions '}' ';'

    '#'  shift, and go to state 81


State 70

   33 struct_variables: struct_variable • struct_variables
   34                 | struct_variable •

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 34 (struct_variables)

    struct_variables  go to state 82
    struct_variable   go to state 70
    datatype          go to state 71


State 71

   35 struct_variable: datatype • ID ';'

    ID  shift, and go to state 83


State 72

    1 program: global_variables '#' functions '#' structs '#' MAIN '(' ')' • '{' body '}'

    '{'  shift, and go to state 84


State 73

   23 function: datatype ID $@4 '(' parameters ')' '{' • body return '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    body                  go to state 94
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 74

   24 parameters: param ',' parameters •

    $default  reduce using rule 24 (parameters)


State 75

   15 value_for_vector: NUMBER •

    $default  reduce using rule 15 (value_for_vector)


State 76

   16 value_for_vector: FLOAT_NUM •

    $default  reduce using rule 16 (value_for_vector)


State 77

   17 value_for_vector: CHARACTER •

    $default  reduce using rule 17 (value_for_vector)


State 78

   18 value_for_vector: STR •

    $default  reduce using rule 18 (value_for_vector)


State 79

   11 init_vector: '=' '{' values_for_vector • '}'

    '}'  shift, and go to state 100


State 80

   13 values_for_vector: value_for_vector • ',' values_for_vector
   14                  | value_for_vector •

    ','  shift, and go to state 101

    $default  reduce using rule 14 (values_for_vector)


State 81

   32 structul: ID '{' $@5 struct_variables '#' • $@6 struct_functions '}' ';'

    $default  reduce using rule 31 ($@6)

    $@6  go to state 102


State 82

   33 struct_variables: struct_variable struct_variables •

    $default  reduce using rule 33 (struct_variables)


State 83

   35 struct_variable: datatype ID • ';'

    ';'  shift, and go to state 103


State 84

    1 program: global_variables '#' functions '#' structs '#' MAIN '(' ')' '{' • body '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    body                  go to state 104
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 85

   55 statement: CONST • datatype ID init
   64          | CONST • datatype ID '[' NUMBER ']' $@11 init_vector

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    datatype  go to state 105


State 86

   48 bodypart: FOR • '(' statement ';' boolean_expression ';' statement ')' '{' body '}'

    '('  shift, and go to state 106


State 87

   50 bodypart: IF • '(' boolean_expression ')' '{' body '}' else

    '('  shift, and go to state 107


State 88

   58 statement: STRUCT • ID ID $@9 init_struct

    ID  shift, and go to state 108


State 89

   49 bodypart: WHILE • '(' boolean_expression ')' '{' body '}'

    '('  shift, and go to state 109


State 90

   59 statement: EVAL • '(' expression ')'

    '('  shift, and go to state 110


State 91

   60 statement: TYPEOF • '(' expression ')'

    '('  shift, and go to state 111


State 92

   88 function_call_struct: ID • '.' ID '(' $@13 parameter_values ')'
   89 assignable_element: ID •
   90                   | ID • '.' ID
   91                   | ID • '[' NUMBER ']'
   93 function_call: ID • $@14 '(' parameter_values ')'

    '['  shift, and go to state 112
    '.'  shift, and go to state 113

    '('       reduce using rule 92 ($@14)
    $default  reduce using rule 89 (assignable_element)

    $@14  go to state 114


State 93

   54 statement: datatype • ID init
   62          | datatype • ID '[' NUMBER ']' $@10 init_vector

    ID  shift, and go to state 115


State 94

   23 function: datatype ID $@4 '(' parameters ')' '{' body • return '}'

    RETURN  shift, and go to state 116

    $default  reduce using rule 117 (return)

    return  go to state 117


State 95

   46 body: bodypart • body
   47     | bodypart •

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    $default  reduce using rule 47 (body)

    datatype              go to state 93
    body                  go to state 118
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 96

   51 bodypart: statement • ';'

    ';'  shift, and go to state 119


State 97

   66 statement: function_call_struct •

    $default  reduce using rule 66 (statement)


State 98

   56 statement: assignable_element • init

    '='  shift, and go to state 120

    $default  reduce using rule 69 (init)

    init  go to state 121


State 99

   65 statement: function_call •

    $default  reduce using rule 65 (statement)


State 100

   11 init_vector: '=' '{' values_for_vector '}' •

    $default  reduce using rule 11 (init_vector)


State 101

   13 values_for_vector: value_for_vector ',' • values_for_vector

    NUMBER     shift, and go to state 75
    FLOAT_NUM  shift, and go to state 76
    CHARACTER  shift, and go to state 77
    STR        shift, and go to state 78

    values_for_vector  go to state 122
    value_for_vector   go to state 80


State 102

   32 structul: ID '{' $@5 struct_variables '#' $@6 • struct_functions '}' ';'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 38 (struct_functions)

    struct_functions  go to state 123
    struct_function   go to state 124
    datatype          go to state 125


State 103

   35 struct_variable: datatype ID ';' •

    $default  reduce using rule 35 (struct_variable)


State 104

    1 program: global_variables '#' functions '#' structs '#' MAIN '(' ')' '{' body • '}'

    '}'  shift, and go to state 126


State 105

   55 statement: CONST datatype • ID init
   64          | CONST datatype • ID '[' NUMBER ']' $@11 init_vector

    ID  shift, and go to state 127


State 106

   48 bodypart: FOR '(' • statement ';' boolean_expression ';' statement ')' '{' body '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    STRUCT  shift, and go to state 88
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    statement             go to state 128
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 107

   50 bodypart: IF '(' • boolean_expression ')' '{' body '}' else

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 129

    expression            go to state 130
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    boolean_expression    go to state 137
    condition             go to state 138
    value                 go to state 139


State 108

   58 statement: STRUCT ID • ID $@9 init_struct

    ID  shift, and go to state 140


State 109

   49 bodypart: WHILE '(' • boolean_expression ')' '{' body '}'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 129

    expression            go to state 130
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    boolean_expression    go to state 141
    condition             go to state 138
    value                 go to state 139


State 110

   59 statement: EVAL '(' • expression ')'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    expression            go to state 143
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 111

   60 statement: TYPEOF '(' • expression ')'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    expression            go to state 144
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 112

   91 assignable_element: ID '[' • NUMBER ']'

    NUMBER  shift, and go to state 145


State 113

   88 function_call_struct: ID '.' • ID '(' $@13 parameter_values ')'
   90 assignable_element: ID '.' • ID

    ID  shift, and go to state 146


State 114

   93 function_call: ID $@14 • '(' parameter_values ')'

    '('  shift, and go to state 147


State 115

   54 statement: datatype ID • init
   62          | datatype ID • '[' NUMBER ']' $@10 init_vector

    '='  shift, and go to state 120
    '['  shift, and go to state 148

    $default  reduce using rule 69 (init)

    init  go to state 149


State 116

  116 return: RETURN • value ';'

    NUMBER     shift, and go to state 28
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33

    value  go to state 150


State 117

   23 function: datatype ID $@4 '(' parameters ')' '{' body return • '}'

    '}'  shift, and go to state 151


State 118

   46 body: bodypart body •

    $default  reduce using rule 46 (body)


State 119

   51 bodypart: statement ';' •

    $default  reduce using rule 51 (bodypart)


State 120

   67 init: '=' • expression
   68     | '=' • boolean_expression

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 129

    expression            go to state 152
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    boolean_expression    go to state 153
    condition             go to state 138
    value                 go to state 139


State 121

   56 statement: assignable_element init •

    $default  reduce using rule 56 (statement)


State 122

   13 values_for_vector: value_for_vector ',' values_for_vector •

    $default  reduce using rule 13 (values_for_vector)


State 123

   32 structul: ID '{' $@5 struct_variables '#' $@6 struct_functions • '}' ';'

    '}'  shift, and go to state 154


State 124

   37 struct_functions: struct_function • $@7 struct_functions

    $default  reduce using rule 36 ($@7)

    $@7  go to state 155


State 125

   40 struct_function: datatype • ID $@8 '(' parameters ')' '{' body return '}'

    ID  shift, and go to state 156


State 126

    1 program: global_variables '#' functions '#' structs '#' MAIN '(' ')' '{' body '}' •

    $default  reduce using rule 1 (program)


State 127

   55 statement: CONST datatype ID • init
   64          | CONST datatype ID • '[' NUMBER ']' $@11 init_vector

    '='  shift, and go to state 120
    '['  shift, and go to state 157

    $default  reduce using rule 69 (init)

    init  go to state 158


State 128

   48 bodypart: FOR '(' statement • ';' boolean_expression ';' statement ')' '{' body '}'

    ';'  shift, and go to state 159


State 129

   81 factor: '(' • expression ')'
  101 condition: '(' • expression relop expression ')'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    expression            go to state 160
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 130

   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen
  100 condition: expression • relop expression

    LE        shift, and go to state 161
    GE        shift, and go to state 162
    EQ        shift, and go to state 163
    NE        shift, and go to state 164
    GT        shift, and go to state 165
    LT        shift, and go to state 166
    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168

    relop  go to state 169


State 131

   77 expression: termen •
   78 termen: termen • MULTIPLY factor
   79       | termen • DIVIDE factor

    MULTIPLY  shift, and go to state 170
    DIVIDE    shift, and go to state 171

    $default  reduce using rule 77 (expression)


State 132

   80 termen: factor •

    $default  reduce using rule 80 (termen)


State 133

   82 factor: element •

    $default  reduce using rule 82 (factor)


State 134

   86 element: function_call_struct •

    $default  reduce using rule 86 (element)


State 135

   84 element: assignable_element •

    $default  reduce using rule 84 (element)


State 136

   85 element: function_call •

    $default  reduce using rule 85 (element)


State 137

   50 bodypart: IF '(' boolean_expression • ')' '{' body '}' else

    ')'  shift, and go to state 172


State 138

   98 boolean_expression: condition • boolean boolean_expression
   99                   | condition •

    AND  shift, and go to state 173
    OR   shift, and go to state 174

    $default  reduce using rule 99 (boolean_expression)

    boolean  go to state 175


State 139

   83 element: value •

    $default  reduce using rule 83 (element)


State 140

   58 statement: STRUCT ID ID • $@9 init_struct

    $default  reduce using rule 57 ($@9)

    $@9  go to state 176


State 141

   49 bodypart: WHILE '(' boolean_expression • ')' '{' body '}'

    ')'  shift, and go to state 177


State 142

   81 factor: '(' • expression ')'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    expression            go to state 178
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 143

   59 statement: EVAL '(' expression • ')'
   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen

    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168
    ')'       shift, and go to state 179


State 144

   60 statement: TYPEOF '(' expression • ')'
   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen

    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168
    ')'       shift, and go to state 180


State 145

   91 assignable_element: ID '[' NUMBER • ']'

    ']'  shift, and go to state 181


State 146

   88 function_call_struct: ID '.' ID • '(' $@13 parameter_values ')'
   90 assignable_element: ID '.' ID •

    '('  shift, and go to state 182

    $default  reduce using rule 90 (assignable_element)


State 147

   93 function_call: ID $@14 '(' • parameter_values ')'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    $default  reduce using rule 97 (parameter_values)

    expression            go to state 183
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    parameter_values      go to state 184
    value                 go to state 139


State 148

   62 statement: datatype ID '[' • NUMBER ']' $@10 init_vector

    NUMBER  shift, and go to state 185


State 149

   54 statement: datatype ID init •

    $default  reduce using rule 54 (statement)


State 150

  116 return: RETURN value • ';'

    ';'  shift, and go to state 186


State 151

   23 function: datatype ID $@4 '(' parameters ')' '{' body return '}' •

    $default  reduce using rule 23 (function)


State 152

   67 init: '=' expression •
   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen
  100 condition: expression • relop expression

    LE        shift, and go to state 161
    GE        shift, and go to state 162
    EQ        shift, and go to state 163
    NE        shift, and go to state 164
    GT        shift, and go to state 165
    LT        shift, and go to state 166
    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168

    $default  reduce using rule 67 (init)

    relop  go to state 169


State 153

   68 init: '=' boolean_expression •

    $default  reduce using rule 68 (init)


State 154

   32 structul: ID '{' $@5 struct_variables '#' $@6 struct_functions '}' • ';'

    ';'  shift, and go to state 187


State 155

   37 struct_functions: struct_function $@7 • struct_functions

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 38 (struct_functions)

    struct_functions  go to state 188
    struct_function   go to state 124
    datatype          go to state 125


State 156

   40 struct_function: datatype ID • $@8 '(' parameters ')' '{' body return '}'

    $default  reduce using rule 39 ($@8)

    $@8  go to state 189


State 157

   64 statement: CONST datatype ID '[' • NUMBER ']' $@11 init_vector

    NUMBER  shift, and go to state 190


State 158

   55 statement: CONST datatype ID init •

    $default  reduce using rule 55 (statement)


State 159

   48 bodypart: FOR '(' statement ';' • boolean_expression ';' statement ')' '{' body '}'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 129

    expression            go to state 130
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    boolean_expression    go to state 191
    condition             go to state 138
    value                 go to state 139


State 160

   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen
   81 factor: '(' expression • ')'
  101 condition: '(' expression • relop expression ')'

    LE        shift, and go to state 161
    GE        shift, and go to state 162
    EQ        shift, and go to state 163
    NE        shift, and go to state 164
    GT        shift, and go to state 165
    LT        shift, and go to state 166
    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168
    ')'       shift, and go to state 192

    relop  go to state 193


State 161

  106 relop: LE •

    $default  reduce using rule 106 (relop)


State 162

  107 relop: GE •

    $default  reduce using rule 107 (relop)


State 163

  108 relop: EQ •

    $default  reduce using rule 108 (relop)


State 164

  109 relop: NE •

    $default  reduce using rule 109 (relop)


State 165

  105 relop: GT •

    $default  reduce using rule 105 (relop)


State 166

  104 relop: LT •

    $default  reduce using rule 104 (relop)


State 167

   75 expression: expression ADD • termen

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    termen                go to state 194
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 168

   76 expression: expression SUBTRACT • termen

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    termen                go to state 195
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 169

  100 condition: expression relop • expression

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    expression            go to state 196
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 170

   78 termen: termen MULTIPLY • factor

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    factor                go to state 197
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 171

   79 termen: termen DIVIDE • factor

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    factor                go to state 198
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 172

   50 bodypart: IF '(' boolean_expression ')' • '{' body '}' else

    '{'  shift, and go to state 199


State 173

  102 boolean: AND •

    $default  reduce using rule 102 (boolean)


State 174

  103 boolean: OR •

    $default  reduce using rule 103 (boolean)


State 175

   98 boolean_expression: condition boolean • boolean_expression

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 129

    expression            go to state 130
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    boolean_expression    go to state 200
    condition             go to state 138
    value                 go to state 139


State 176

   58 statement: STRUCT ID ID $@9 • init_struct

    '='  shift, and go to state 201

    $default  reduce using rule 71 (init_struct)

    init_struct  go to state 202


State 177

   49 bodypart: WHILE '(' boolean_expression ')' • '{' body '}'

    '{'  shift, and go to state 203


State 178

   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen
   81 factor: '(' expression • ')'

    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168
    ')'       shift, and go to state 192


State 179

   59 statement: EVAL '(' expression ')' •

    $default  reduce using rule 59 (statement)


State 180

   60 statement: TYPEOF '(' expression ')' •

    $default  reduce using rule 60 (statement)


State 181

   91 assignable_element: ID '[' NUMBER ']' •

    $default  reduce using rule 91 (assignable_element)


State 182

   88 function_call_struct: ID '.' ID '(' • $@13 parameter_values ')'

    $default  reduce using rule 87 ($@13)

    $@13  go to state 204


State 183

   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen
   95 parameter_values: expression • $@15 ',' parameter_values
   96                 | expression •

    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168

    ')'       reduce using rule 96 (parameter_values)
    $default  reduce using rule 94 ($@15)

    $@15  go to state 205


State 184

   93 function_call: ID $@14 '(' parameter_values • ')'

    ')'  shift, and go to state 206


State 185

   62 statement: datatype ID '[' NUMBER • ']' $@10 init_vector

    ']'  shift, and go to state 207


State 186

  116 return: RETURN value ';' •

    $default  reduce using rule 116 (return)


State 187

   32 structul: ID '{' $@5 struct_variables '#' $@6 struct_functions '}' ';' •

    $default  reduce using rule 32 (structul)


State 188

   37 struct_functions: struct_function $@7 struct_functions •

    $default  reduce using rule 37 (struct_functions)


State 189

   40 struct_function: datatype ID $@8 • '(' parameters ')' '{' body return '}'

    '('  shift, and go to state 208


State 190

   64 statement: CONST datatype ID '[' NUMBER • ']' $@11 init_vector

    ']'  shift, and go to state 209


State 191

   48 bodypart: FOR '(' statement ';' boolean_expression • ';' statement ')' '{' body '}'

    ';'  shift, and go to state 210


State 192

   81 factor: '(' expression ')' •

    $default  reduce using rule 81 (factor)


State 193

  101 condition: '(' expression relop • expression ')'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    expression            go to state 211
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    value                 go to state 139


State 194

   75 expression: expression ADD termen •
   78 termen: termen • MULTIPLY factor
   79       | termen • DIVIDE factor

    MULTIPLY  shift, and go to state 170
    DIVIDE    shift, and go to state 171

    $default  reduce using rule 75 (expression)


State 195

   76 expression: expression SUBTRACT termen •
   78 termen: termen • MULTIPLY factor
   79       | termen • DIVIDE factor

    MULTIPLY  shift, and go to state 170
    DIVIDE    shift, and go to state 171

    $default  reduce using rule 76 (expression)


State 196

   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen
  100 condition: expression relop expression •

    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168

    $default  reduce using rule 100 (condition)


State 197

   78 termen: termen MULTIPLY factor •

    $default  reduce using rule 78 (termen)


State 198

   79 termen: termen DIVIDE factor •

    $default  reduce using rule 79 (termen)


State 199

   50 bodypart: IF '(' boolean_expression ')' '{' • body '}' else

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    body                  go to state 212
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 200

   98 boolean_expression: condition boolean boolean_expression •

    $default  reduce using rule 98 (boolean_expression)


State 201

   70 init_struct: '=' • '{' values '}'

    '{'  shift, and go to state 213


State 202

   58 statement: STRUCT ID ID $@9 init_struct •

    $default  reduce using rule 58 (statement)


State 203

   49 bodypart: WHILE '(' boolean_expression ')' '{' • body '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    body                  go to state 214
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 204

   88 function_call_struct: ID '.' ID '(' $@13 • parameter_values ')'

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    $default  reduce using rule 97 (parameter_values)

    expression            go to state 183
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    parameter_values      go to state 215
    value                 go to state 139


State 205

   95 parameter_values: expression $@15 • ',' parameter_values

    ','  shift, and go to state 216


State 206

   93 function_call: ID $@14 '(' parameter_values ')' •

    $default  reduce using rule 93 (function_call)


State 207

   62 statement: datatype ID '[' NUMBER ']' • $@10 init_vector

    $default  reduce using rule 61 ($@10)

    $@10  go to state 217


State 208

   40 struct_function: datatype ID $@8 '(' • parameters ')' '{' body return '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 26 (parameters)

    parameters  go to state 218
    param       go to state 56
    datatype    go to state 57


State 209

   64 statement: CONST datatype ID '[' NUMBER ']' • $@11 init_vector

    $default  reduce using rule 63 ($@11)

    $@11  go to state 219


State 210

   48 bodypart: FOR '(' statement ';' boolean_expression ';' • statement ')' '{' body '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    STRUCT  shift, and go to state 88
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    statement             go to state 220
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 211

   75 expression: expression • ADD termen
   76           | expression • SUBTRACT termen
  101 condition: '(' expression relop expression • ')'

    ADD       shift, and go to state 167
    SUBTRACT  shift, and go to state 168
    ')'       shift, and go to state 221


State 212

   50 bodypart: IF '(' boolean_expression ')' '{' body • '}' else

    '}'  shift, and go to state 222


State 213

   70 init_struct: '=' '{' • values '}'

    NUMBER     shift, and go to state 28
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33

    values  go to state 223
    value   go to state 224


State 214

   49 bodypart: WHILE '(' boolean_expression ')' '{' body • '}'

    '}'  shift, and go to state 225


State 215

   88 function_call_struct: ID '.' ID '(' $@13 parameter_values • ')'

    ')'  shift, and go to state 226


State 216

   95 parameter_values: expression $@15 ',' • parameter_values

    NUMBER     shift, and go to state 28
    ID         shift, and go to state 92
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33
    '('        shift, and go to state 142

    $default  reduce using rule 97 (parameter_values)

    expression            go to state 183
    termen                go to state 131
    factor                go to state 132
    element               go to state 133
    function_call_struct  go to state 134
    assignable_element    go to state 135
    function_call         go to state 136
    parameter_values      go to state 227
    value                 go to state 139


State 217

   62 statement: datatype ID '[' NUMBER ']' $@10 • init_vector

    '='  shift, and go to state 58

    $default  reduce using rule 12 (init_vector)

    init_vector  go to state 228


State 218

   40 struct_function: datatype ID $@8 '(' parameters • ')' '{' body return '}'

    ')'  shift, and go to state 229


State 219

   64 statement: CONST datatype ID '[' NUMBER ']' $@11 • init_vector

    '='  shift, and go to state 58

    $default  reduce using rule 12 (init_vector)

    init_vector  go to state 230


State 220

   48 bodypart: FOR '(' statement ';' boolean_expression ';' statement • ')' '{' body '}'

    ')'  shift, and go to state 231


State 221

  101 condition: '(' expression relop expression ')' •

    $default  reduce using rule 101 (condition)


State 222

   50 bodypart: IF '(' boolean_expression ')' '{' body '}' • else

    ELSE  shift, and go to state 232

    $default  reduce using rule 53 (else)

    else  go to state 233


State 223

   70 init_struct: '=' '{' values • '}'

    '}'  shift, and go to state 234


State 224

   73 values: value • $@12 ',' values
   74       | value •

    '}'       reduce using rule 74 (values)
    $default  reduce using rule 72 ($@12)

    $@12  go to state 235


State 225

   49 bodypart: WHILE '(' boolean_expression ')' '{' body '}' •

    $default  reduce using rule 49 (bodypart)


State 226

   88 function_call_struct: ID '.' ID '(' $@13 parameter_values ')' •

    $default  reduce using rule 88 (function_call_struct)


State 227

   95 parameter_values: expression $@15 ',' parameter_values •

    $default  reduce using rule 95 (parameter_values)


State 228

   62 statement: datatype ID '[' NUMBER ']' $@10 init_vector •

    $default  reduce using rule 62 (statement)


State 229

   40 struct_function: datatype ID $@8 '(' parameters ')' • '{' body return '}'

    '{'  shift, and go to state 236


State 230

   64 statement: CONST datatype ID '[' NUMBER ']' $@11 init_vector •

    $default  reduce using rule 64 (statement)


State 231

   48 bodypart: FOR '(' statement ';' boolean_expression ';' statement ')' • '{' body '}'

    '{'  shift, and go to state 237


State 232

   52 else: ELSE • '{' body '}'

    '{'  shift, and go to state 238


State 233

   50 bodypart: IF '(' boolean_expression ')' '{' body '}' else •

    $default  reduce using rule 50 (bodypart)


State 234

   70 init_struct: '=' '{' values '}' •

    $default  reduce using rule 70 (init_struct)


State 235

   73 values: value $@12 • ',' values

    ','  shift, and go to state 239


State 236

   40 struct_function: datatype ID $@8 '(' parameters ')' '{' • body return '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    body                  go to state 240
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 237

   48 bodypart: FOR '(' statement ';' boolean_expression ';' statement ')' '{' • body '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    body                  go to state 241
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 238

   52 else: ELSE '{' • body '}'

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    CHAR    shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5
    CONST   shift, and go to state 85
    FOR     shift, and go to state 86
    IF      shift, and go to state 87
    STRUCT  shift, and go to state 88
    WHILE   shift, and go to state 89
    EVAL    shift, and go to state 90
    TYPEOF  shift, and go to state 91
    ID      shift, and go to state 92

    datatype              go to state 93
    body                  go to state 242
    bodypart              go to state 95
    statement             go to state 96
    function_call_struct  go to state 97
    assignable_element    go to state 98
    function_call         go to state 99


State 239

   73 values: value $@12 ',' • values

    NUMBER     shift, and go to state 28
    TRUE       shift, and go to state 29
    FALSE      shift, and go to state 30
    FLOAT_NUM  shift, and go to state 31
    CHARACTER  shift, and go to state 32
    STR        shift, and go to state 33

    values  go to state 243
    value   go to state 224


State 240

   40 struct_function: datatype ID $@8 '(' parameters ')' '{' body • return '}'

    RETURN  shift, and go to state 116

    $default  reduce using rule 117 (return)

    return  go to state 244


State 241

   48 bodypart: FOR '(' statement ';' boolean_expression ';' statement ')' '{' body • '}'

    '}'  shift, and go to state 245


State 242

   52 else: ELSE '{' body • '}'

    '}'  shift, and go to state 246


State 243

   73 values: value $@12 ',' values •

    $default  reduce using rule 73 (values)


State 244

   40 struct_function: datatype ID $@8 '(' parameters ')' '{' body return • '}'

    '}'  shift, and go to state 247


State 245

   48 bodypart: FOR '(' statement ';' boolean_expression ';' statement ')' '{' body '}' •

    $default  reduce using rule 48 (bodypart)


State 246

   52 else: ELSE '{' body '}' •

    $default  reduce using rule 52 (else)


State 247

   40 struct_function: datatype ID $@8 '(' parameters ')' '{' body return '}' •

    $default  reduce using rule 40 (struct_function)
